//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ripp3r.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ripp3r.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap button_cancel_small {
            get {
                object obj = ResourceManager.GetObject("button_cancel_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default keys.
        /// </summary>
        internal static string DefaultKeysCaption {
            get {
                return ResourceManager.GetString("DefaultKeysCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using default keys WILL remarry your PS3 drive with a set of default keys. This will OVERWRITE the existing keys of the drive, making it useless for any PS3. Are you sure you want to do this?.
        /// </summary>
        internal static string DefaultKeysWarningSettings {
            get {
                return ResourceManager.GetString("DefaultKeysWarningSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap download_small__1_ {
            get {
                object obj = ResourceManager.GetObject("download_small__1_", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to download the PS3 Update file now?.
        /// </summary>
        internal static string DownloadUpdateFile {
            get {
                return ResourceManager.GetString("DownloadUpdateFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Eject {
            get {
                object obj = ResourceManager.GetObject("Eject", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 3K3y Game Iso (*.iso;*.dec;*.zip)|*.iso;*.dec;*.zip;*.zip.001|All files (*.*)|*.*.
        /// </summary>
        internal static string Filter3K3yGameIso {
            get {
                return ResourceManager.GetString("Filter3K3yGameIso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ISO Rebuild Data|*.ird.
        /// </summary>
        internal static string FilterIRDFile {
            get {
                return ResourceManager.GetString("FilterIRDFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ISO Files (*.iso)|*.iso.
        /// </summary>
        internal static string FilterIsoFiles {
            get {
                return ResourceManager.GetString("FilterIsoFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you have a personal upload key?.
        /// </summary>
        internal static string HavePersonalKey {
            get {
                return ResourceManager.GetString("HavePersonalKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is not a valid ISO file, it&apos;s an already rebuilt ISO file, or it&apos;s a decrypted ISO file..
        /// </summary>
        internal static string InvalidIsoForIrdFileCreation {
            get {
                return ResourceManager.GetString("InvalidIsoForIrdFileCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select IRD file to use.
        /// </summary>
        internal static string IRDFileToUse {
            get {
                return ResourceManager.GetString("IRDFileToUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected directory is not a valid PS3 JB directory.
        /// </summary>
        internal static string NotAValidJBDirectory {
            get {
                return ResourceManager.GetString("NotAValidJBDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose a location where to save the resulting ISO.
        /// </summary>
        internal static string SaveIsoLocation {
            get {
                return ResourceManager.GetString("SaveIsoLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the directory containing the JB files.
        /// </summary>
        internal static string SelectDirectoryContainingJBFiles {
            get {
                return ResourceManager.GetString("SelectDirectoryContainingJBFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a game ISO (encrypted, decrypted, or zipped).
        /// </summary>
        internal static string SelectGameIso {
            get {
                return ResourceManager.GetString("SelectGameIso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select ISO file to create IRD file from.
        /// </summary>
        internal static string SelectIsoToCreateIrdFileFrom {
            get {
                return ResourceManager.GetString("SelectIsoToCreateIrdFileFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update found.
        /// </summary>
        internal static string UpdateFound {
            get {
                return ResourceManager.GetString("UpdateFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update version.
        /// </summary>
        internal static string UpdateVersion {
            get {
                return ResourceManager.GetString("UpdateVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ve enabled the use of the default keys, but the current drive is using different keys. Do you want to OVERWRITE the keys of the drive? Warning: you cannot use this drive with a PS3 anymore!.
        /// </summary>
        internal static string UseDefaultKeys {
            get {
                return ResourceManager.GetString("UseDefaultKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select where to save the IRD file.
        /// </summary>
        internal static string WhereSaveIrdFile {
            get {
                return ResourceManager.GetString("WhereSaveIrdFile", resourceCulture);
            }
        }
    }
}
